services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" 
      - "15672:15672"
      - "15692:15692"
    command: >
      bash -c "rabbitmq-plugins enable --offline rabbitmq_prometheus && rabbitmq-server"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 20

  order:
    image: dperreaux/epsi4a-mspr4-msorder:0.4
    container_name: order
    ports:
      - "3012:8080"
    env_file:
      - ./environment/.env.order.development
    depends_on:
      rabbitmq:
        condition: service_healthy

  client:
    image: epsi4a-mspr4-msclient:test
    container_name: client
    depends_on:
      rabbitmq:
        condition: service_healthy
      logstash:
        condition: service_started
    ports:
      - "3033:8080"
      - "3034:3034"
    env_file:
      - ./environment/.env.client.development

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.9.3
    container_name: logstash
    volumes:
      - ./src/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5000:5000"
      - "5044:5044"
    env_file:
      - ./environment/.env.client.development

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.3
    container_name: kibana
    ports:
      - "5601:5601"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./src/observability/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - client
      - order
      - product

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  product:
    image: genessy/epsi4a-mspr4-msproduct:0.4.1
    container_name: product
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "3022:8080"
    env_file:
      - ./environment/.env.product.development
    volumes:
      - ./configs/serviceAccountKey.json:/app/credentials/serviceAccountKey.json:ro